name: prodCI

on:
  push:
    branches:
      - 'main'
      - 'mainteinance'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
      NEXT_PUBLIC_FB_PIXEL_ID_MAIN: ${{ secrets.FB_PIXEL_ID_MAIN }}
      NEXT_PUBLIC_YANDEX_CODE: ${{ secrets.YANDEX_CODE }}
      AWS_S3_BUCKET: instakash.net
      AWS_REGION: us-east-2
      AWS_CF_DISTRIBUTION_ID: E26OZWA1YFE90H
    strategy:
      matrix:
        node-version: [15.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build de application
        run: yarn build
      - uses: jakejarvis/s3-sync-action@master
        name: Upload the app to S3 bucket
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: 'out'
      - name: Create Cloudfront cache invalidation
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ env.AWS_CF_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
